name: Chat_UNA CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    # Paso opcional para depurar: Listar paquetes instalados
    - name: List installed packages
      run: npm list

    # Este es el paso que inyecta las variables de entorno desde los secretos
    - name: Set environment variables
      run: |
        echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
        echo "AUTH0_SECRET=${{ secrets.AUTH0_SECRET }}" >> $GITHUB_ENV
        echo "AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}" >> $GITHUB_ENV
        echo "AUTH0_BASE_URL=${{ secrets.AUTH0_BASE_URL }}" >> $GITHUB_ENV
        echo "AUTH0_ISSUER_BASE_URL=${{ secrets.AUTH0_ISSUER_BASE_URL }}" >> $GITHUB_ENV

    # Ejecutar las pruebas con Mocha
    - name: Run tests
      run: npm test

    # Paso opcional: Instalar Mocha globalmente (si persisten los problemas)
    - name: Install Mocha globally (optional)
      run: npm install -g mocha

    # Iniciar sesi√≥n en Docker Hub utilizando los secretos
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Construir la imagen Docker con la etiqueta latest
    - name: Build Docker image
      run: docker build -t enriquemr171/chat-una-app:latest .

    # Subir la imagen Docker a Docker Hub
    - name: Push Docker image
      run: docker push enriquemr171/chat-una-app:latest
